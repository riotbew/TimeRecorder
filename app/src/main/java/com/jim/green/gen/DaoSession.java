package com.jim.green.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.jim.recorder.model.EventType;
import com.jim.recorder.model.Cell;
import com.jim.recorder.model.CategoryType;
import com.jim.recorder.model.DayCell;

import com.jim.green.gen.EventTypeDao;
import com.jim.green.gen.CellDao;
import com.jim.green.gen.CategoryTypeDao;
import com.jim.green.gen.DayCellDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig eventTypeDaoConfig;
    private final DaoConfig cellDaoConfig;
    private final DaoConfig categoryTypeDaoConfig;
    private final DaoConfig dayCellDaoConfig;

    private final EventTypeDao eventTypeDao;
    private final CellDao cellDao;
    private final CategoryTypeDao categoryTypeDao;
    private final DayCellDao dayCellDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        eventTypeDaoConfig = daoConfigMap.get(EventTypeDao.class).clone();
        eventTypeDaoConfig.initIdentityScope(type);

        cellDaoConfig = daoConfigMap.get(CellDao.class).clone();
        cellDaoConfig.initIdentityScope(type);

        categoryTypeDaoConfig = daoConfigMap.get(CategoryTypeDao.class).clone();
        categoryTypeDaoConfig.initIdentityScope(type);

        dayCellDaoConfig = daoConfigMap.get(DayCellDao.class).clone();
        dayCellDaoConfig.initIdentityScope(type);

        eventTypeDao = new EventTypeDao(eventTypeDaoConfig, this);
        cellDao = new CellDao(cellDaoConfig, this);
        categoryTypeDao = new CategoryTypeDao(categoryTypeDaoConfig, this);
        dayCellDao = new DayCellDao(dayCellDaoConfig, this);

        registerDao(EventType.class, eventTypeDao);
        registerDao(Cell.class, cellDao);
        registerDao(CategoryType.class, categoryTypeDao);
        registerDao(DayCell.class, dayCellDao);
    }
    
    public void clear() {
        eventTypeDaoConfig.clearIdentityScope();
        cellDaoConfig.clearIdentityScope();
        categoryTypeDaoConfig.clearIdentityScope();
        dayCellDaoConfig.clearIdentityScope();
    }

    public EventTypeDao getEventTypeDao() {
        return eventTypeDao;
    }

    public CellDao getCellDao() {
        return cellDao;
    }

    public CategoryTypeDao getCategoryTypeDao() {
        return categoryTypeDao;
    }

    public DayCellDao getDayCellDao() {
        return dayCellDao;
    }

}
